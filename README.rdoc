== Badhoc

You've pretty much have to be out of your mind to run this, let alone any imageboard script really. 
I threw this together in 30 second sprints here and there (adhoc), it needs a ton of work, but if you want it, 
it's here. 

If you can get past that, Badhoc has:

* Multiple Boards, Multiple Categories of Boards
* A decent ban system
* Markdown markup.
* Project Honeypot Blocklist Lock-outs to prevent comment spam.
* Atom Feeds for posts and boards (includes ID's so your feed reader doesn't hose itself)
* TL;DR picture wall view of all site threads. 
* Sticky and Locked posts
* Good performance features. 
* Ajaxy auto-updating comments on posts. Make a post, watch comments roll in in realtime. Well, pretty close to realtime. 

=== Use

If you intend on actually using this, drop me a line, I'd like to know how it works out for you. My github account is
skord, you can find me on irc.rizon.net sometimes by the same. 

== Getting started

You'll need git, ruby, and rubygems. Optionally a database, if you're running this in production, that's a really good idea.

You'll also need to get a project honeypot API key for HttpBL. This is an attempt to block spam before it hits your board.

...some other things I'm probably missing.

Quicklist:

<tt>git clone git://github.com/skord/badhoc.git</tt>

<tt>bundle</tt>

<tt>rake db:setup</tt>

<tt>rails s</tt>

== Upgrading

Should you already have Badhoc running, I try to make sure you can <tt>git pull</tt>, run <tt>rake db:migrate</tt>,
and possibly restart your application if need be without too much headache.

=== Project Honeypot Block List

Badhoc makes use of bpalmen's httpbl rack middleware filter for httpbl. Read more at the 
{HttpBL Project Page}[https://github.com/bpalmen/httpbl] about getting a key. Badhoc expects your key 
to be an environmental variable 'HTTPBL_KEY', so something like:

<tt>HATREDCOPTER:badhoc mike$ export HTTPBL_KEY='THISISMYKEYYYYYYYYY'</tt>

needs to be done, or better yet, put it in your .profile.

=== Create an admin user

I turned off the registrable flag in devise, so you'll have to create a rake task or create an admin user at the console

Try:

<tt>rails c</tt>

<tt>ruby > Admin.create!(:email => 'me@my.net', :password => 'password')</tt>

... but with obviously a better password and your real email. 

== TODO

* FOR THE LOVE OF GOD WRITE SOME TESTS
* Finish the iPhone views, never really tried anything like that before. 
